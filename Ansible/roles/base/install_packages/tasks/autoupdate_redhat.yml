---
# =============================================================================
# RedHat/CentOS Automatic Security Updates Configuration
# =============================================================================
# This file configures dnf-automatic (RHEL 8+) or yum-cron (RHEL 7)
# for automatic security updates with GPG verification.
#
# Этот файл настраивает dnf-automatic (RHEL 8+) или yum-cron (RHEL 7)
# для автоматических обновлений безопасности с проверкой GPG.
# =============================================================================

- name: "Configure automatic security updates for RedHat/CentOS"
  # Configure dnf-automatic or yum-cron for automatic security updates / Настройка dnf-automatic или yum-cron для автоматических обновлений безопасности
  block:
    - name: "Determine package manager and version"
      # Determine if using DNF or YUM / Определение использования DNF или YUM
      ansible.builtin.set_fact:
        use_dnf: "{{ (ansible_distribution_major_version | int >= 8) or (ansible_distribution in ['Rocky', 'AlmaLinux']) }}"
        autoupdate_package: "{{ 'dnf-automatic' if ((ansible_distribution_major_version | int >= 8) or (ansible_distribution in ['Rocky', 'AlmaLinux'])) else 'yum-cron' }}"
        autoupdate_service: "{{ 'dnf-automatic.timer' if ((ansible_distribution_major_version | int >= 8) or (ansible_distribution in ['Rocky', 'AlmaLinux'])) else 'yum-cron' }}"
        autoupdate_config: "{{ '/etc/dnf/automatic.conf' if ((ansible_distribution_major_version | int >= 8) or (ansible_distribution in ['Rocky', 'AlmaLinux'])) else '/etc/yum/yum-cron.conf' }}"

    - name: "Display automatic updates configuration initialization (English)"
      # Show initialization message / Показать сообщение об инициализации
      ansible.builtin.debug:
        msg:
          - "============================================================================="
          - "Configuring Automatic Security Updates for RedHat/CentOS"
          - "============================================================================="
          - "Distribution:             {{ ansible_distribution }} {{ ansible_distribution_major_version }}"
          - "Using DNF:                {{ use_dnf }}"
          - "Auto-update Package:      {{ autoupdate_package }}"
          - "Auto-updates Enabled:     {{ autoupdates_enabled }}"
          - "Security Only:            {{ security_updates_only }}"
          - "GPG Verification:         {{ gpg_require_signed }}"
          - "Reboot If Required:       {{ reboot_if_required }}"
          - "============================================================================="
      when: 
        - debug_mode | bool
        - debug_lang | default('both') in ['english', 'both']

    - name: "Display automatic updates configuration initialization (Russian)"
      # Show initialization message / Показать сообщение об инициализации
      ansible.builtin.debug:
        msg:
          - "============================================================================="
          - "Настройка автоматических обновлений безопасности для RedHat/CentOS"
          - "============================================================================="
          - "Дистрибутив:              {{ ansible_distribution }} {{ ansible_distribution_major_version }}"
          - "Использование DNF:        {{ use_dnf }}"
          - "Пакет автообновления:     {{ autoupdate_package }}"
          - "Автообновления включены:  {{ autoupdates_enabled }}"
          - "Только безопасность:      {{ security_updates_only }}"
          - "Проверка GPG:             {{ gpg_require_signed }}"
          - "Перезагрузка при необходимости: {{ reboot_if_required }}"
          - "============================================================================="
      when: 
        - debug_mode | bool
        - debug_lang | default('both') in ['russian', 'both']

    - name: "Install automatic updates package (dnf-automatic or yum-cron)"
      # Install the appropriate automatic updates package / Установка соответствующего пакета автоматических обновлений
      ansible.builtin.yum:
        name: "{{ autoupdate_package }}"
        state: present
      register: autoupdate_install
      become: true
      tags:
        - packages
        - security
        - autoupdate

    - name: "Verify GPG keys for all configured repositories"
      # Check that all repositories have valid GPG keys / Проверка наличия валидных GPG ключей для всех репозиториев
      ansible.builtin.command: rpm -q gpg-pubkey --qf '%{NAME}-%{VERSION}-%{RELEASE}\t%{SUMMARY}\n'
      register: rpm_keys_list
      changed_when: false
      failed_when: false
      become: true
      tags:
        - security
        - gpg

    - name: "Display GPG keys verification status (English)"
      # Show GPG keys status / Показать статус GPG ключей
      ansible.builtin.debug:
        msg:
          - "============================================================================="
          - "GPG Keys Verification:"
          - "============================================================================="
          - "GPG Keys Found:           {{ 'YES' if rpm_keys_list.rc == 0 else 'NO' }}"
          - "Keys Count:               {{ rpm_keys_list.stdout_lines | length }}"
          - "Verification Status:      {{ 'PASSED' if rpm_keys_list.rc == 0 else 'FAILED' }}"
          - "============================================================================="
      when: 
        - debug_mode | bool
        - debug_lang | default('both') in ['english', 'both']

    - name: "Display GPG keys verification status (Russian)"
      # Show GPG keys status / Показать статус GPG ключей
      ansible.builtin.debug:
        msg:
          - "============================================================================="
          - "Проверка GPG ключей:"
          - "============================================================================="
          - "GPG ключи найдены:        {{ 'ДА' if rpm_keys_list.rc == 0 else 'НЕТ' }}"
          - "Количество ключей:        {{ rpm_keys_list.stdout_lines | length }}"
          - "Статус проверки:          {{ 'УСПЕШНО' if rpm_keys_list.rc == 0 else 'НЕУДАЧНО' }}"
          - "============================================================================="
      when: 
        - debug_mode | bool
        - debug_lang | default('both') in ['russian', 'both']

    - name: "Configure YUM/DNF to require signed packages"
      # Ensure YUM/DNF only accepts signed packages / Обеспечить принятие YUM/DNF только подписанных пакетов
      ansible.builtin.lineinfile:
        path: "{{ '/etc/dnf/dnf.conf' if use_dnf else '/etc/yum.conf' }}"
        regexp: '^gpgcheck='
        line: 'gpgcheck=1'
        create: true
        mode: '0644'
        owner: root
        group: root
      become: true
      when: gpg_require_signed | bool
      tags:
        - security
        - gpg
        - configuration

    - name: "Configure YUM/DNF to require repository GPG check"
      # Ensure repository metadata is also GPG checked / Обеспечить проверку GPG метаданных репозитория
      ansible.builtin.lineinfile:
        path: "{{ '/etc/dnf/dnf.conf' if use_dnf else '/etc/yum.conf' }}"
        regexp: '^repo_gpgcheck='
        line: 'repo_gpgcheck=1'
        create: true
        mode: '0644'
        owner: root
        group: root
      become: true
      when: gpg_require_signed | bool
      tags:
        - security
        - gpg
        - configuration

    - name: "Configure localpkg_gpgcheck for local packages"
      # Ensure local packages are also GPG checked / Обеспечить проверку GPG локальных пакетов
      ansible.builtin.lineinfile:
        path: "{{ '/etc/dnf/dnf.conf' if use_dnf else '/etc/yum.conf' }}"
        regexp: '^localpkg_gpgcheck='
        line: 'localpkg_gpgcheck=1'
        create: true
        mode: '0644'
        owner: root
        group: root
      become: true
      when: gpg_require_signed | bool
      tags:
        - security
        - gpg
        - configuration

    - name: "Configure dnf-automatic for security updates (RHEL 8+)"
      # Configure dnf-automatic for security-only updates / Настройка dnf-automatic для обновлений только безопасности
      ansible.builtin.template:
        src: dnf-automatic.conf.j2
        dest: /etc/dnf/automatic.conf
        mode: '0644'
        owner: root
        group: root
      become: true
      register: dnf_automatic_config
      when: use_dnf | bool
      tags:
        - configuration
        - security

    - name: "Configure yum-cron for security updates (RHEL 7)"
      # Configure yum-cron for security-only updates / Настройка yum-cron для обновлений только безопасности
      ansible.builtin.template:
        src: yum-cron.conf.j2
        dest: /etc/yum/yum-cron.conf
        mode: '0644'
        owner: root
        group: root
      become: true
      register: yum_cron_config
      when: not (use_dnf | bool)
      tags:
        - configuration
        - security

    - name: "Enable and start automatic updates service (dnf-automatic timer)"
      # Ensure dnf-automatic timer is enabled and running / Обеспечить включение и запуск таймера dnf-automatic
      ansible.builtin.systemd:
        name: dnf-automatic.timer
        enabled: true
        state: started
      become: true
      register: dnf_automatic_service
      when: use_dnf | bool
      tags:
        - service
        - security

    - name: "Enable and start automatic updates service (yum-cron)"
      # Ensure yum-cron service is enabled and running / Обеспечить включение и запуск службы yum-cron
      ansible.builtin.systemd:
        name: yum-cron
        enabled: true
        state: started
      become: true
      register: yum_cron_service
      when: not (use_dnf | bool)
      tags:
        - service
        - security

    - name: "Display automatic updates configuration results (English)"
      # Show configuration results / Показать результаты конфигурации
      ansible.builtin.debug:
        msg:
          - "============================================================================="
          - "Automatic Security Updates Configuration Results:"
          - "============================================================================="
          - "Package Installed:        {{ 'YES' if autoupdate_install.changed else 'ALREADY INSTALLED' }}"
          - "Configuration Updated:    {{ 'YES' if (dnf_automatic_config.changed | default(false)) or (yum_cron_config.changed | default(false)) else 'NO CHANGE' }}"
          - "Service Enabled:          {{ 'YES' if (dnf_automatic_service.changed | default(false)) or (yum_cron_service.changed | default(false)) else 'ALREADY ENABLED' }}"
          - "GPG Check Enabled:        {{ gpg_require_signed }}"
          - "Configuration Status:     SUCCESS"
          - "============================================================================="
      when: 
        - debug_mode | bool
        - debug_lang | default('both') in ['english', 'both']

    - name: "Display automatic updates configuration results (Russian)"
      # Show configuration results / Показать результаты конфигурации
      ansible.builtin.debug:
        msg:
          - "============================================================================="
          - "Результаты настройки автоматических обновлений безопасности:"
          - "============================================================================="
          - "Пакет установлен:         {{ 'ДА' if autoupdate_install.changed else 'УЖЕ УСТАНОВЛЕН' }}"
          - "Конфигурация обновлена:   {{ 'ДА' if (dnf_automatic_config.changed | default(false)) or (yum_cron_config.changed | default(false)) else 'БЕЗ ИЗМЕНЕНИЙ' }}"
          - "Служба включена:          {{ 'ДА' if (dnf_automatic_service.changed | default(false)) or (yum_cron_service.changed | default(false)) else 'УЖЕ ВКЛЮЧЕНА' }}"
          - "Проверка GPG включена:    {{ gpg_require_signed }}"
          - "Статус конфигурации:      УСПЕХ"
          - "============================================================================="
      when: 
        - debug_mode | bool
        - debug_lang | default('both') in ['russian', 'both']

  when: autoupdates_enabled | bool
  rescue:
    - name: "Handle automatic updates configuration errors"
      # Handle any errors that occur during configuration / Обработка любых ошибок, возникающих при конфигурации
      ansible.builtin.debug:
        msg: "Warning: Failed to configure automatic security updates. Manual configuration may be required."

