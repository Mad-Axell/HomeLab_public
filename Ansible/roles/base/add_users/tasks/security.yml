---
# Security tasks for add_users role
# Задачи безопасности для роли add_users

# EN: Set secure permissions on home directories
# RU: Установка безопасных прав на домашние директории
- name: Set secure permissions on user home directories
  ansible.builtin.file:
    path: "{{ item.home | default(add_users_home_prefix + '/' + item.username) }}"
    state: directory
    mode: "{{ home_dir_permissions }}"
    owner: "{{ item.username }}"
    group: "{{ item.username }}"
  loop: "{{ users_to_add }}"
  when: item.create_home | default(add_users_create_home)
  tags:
    - security
    - permissions
    - users

- name: Display home directory permissions update
  ansible.builtin.debug:
    msg:
      - "============================================================================="
      - "Home Directory Permissions Updated:"
      - "============================================================================="
      - "User:                     {{ item.username }}"
      - "Home Directory:           {{ item.home | default(add_users_home_prefix + '/' + item.username) }}"
      - "Permissions:              {{ home_dir_permissions }}"
      - "============================================================================="
  loop: "{{ users_to_add }}"
  when:
    - debug_mode | default(false)
    - item.create_home | default(add_users_create_home)
  tags:
    - debug
    - security

# EN: Configure password aging policies in /etc/login.defs
# RU: Настройка политик устаревания паролей в /etc/login.defs
- name: Backup /etc/login.defs before modification
  ansible.builtin.copy:
    src: /etc/login.defs
    dest: /etc/login.defs.backup.{{ ansible_date_time.epoch }}
    remote_src: true
    mode: '0644'
  when: backup_config | default(true)
  tags:
    - security
    - backup

- name: Configure PASS_MAX_DAYS in /etc/login.defs
  ansible.builtin.lineinfile:
    path: /etc/login.defs
    regexp: '^PASS_MAX_DAYS\s+'
    line: "PASS_MAX_DAYS   {{ password_max_age }}"
    state: present
    backup: "{{ backup_config | default(true) }}"
    validate: 'grep -q PASS_MAX_DAYS %s'
  tags:
    - security
    - login_defs

- name: Configure PASS_MIN_DAYS in /etc/login.defs
  ansible.builtin.lineinfile:
    path: /etc/login.defs
    regexp: '^PASS_MIN_DAYS\s+'
    line: "PASS_MIN_DAYS   1"
    state: present
    backup: "{{ backup_config | default(true) }}"
    validate: 'grep -q PASS_MIN_DAYS %s'
  tags:
    - security
    - login_defs

- name: Configure PASS_WARN_AGE in /etc/login.defs
  ansible.builtin.lineinfile:
    path: /etc/login.defs
    regexp: '^PASS_WARN_AGE\s+'
    line: "PASS_WARN_AGE   {{ password_warn_age }}"
    state: present
    backup: "{{ backup_config | default(true) }}"
    validate: 'grep -q PASS_WARN_AGE %s'
  tags:
    - security
    - login_defs

- name: Configure UMASK in /etc/login.defs
  ansible.builtin.lineinfile:
    path: /etc/login.defs
    regexp: '^UMASK\s+'
    line: "UMASK           {{ umask_system_users }}"
    state: present
    backup: "{{ backup_config | default(true) }}"
    validate: 'grep -q UMASK %s'
  tags:
    - security
    - login_defs

- name: Display login.defs configuration (English)
  ansible.builtin.debug:
    msg:
      - "============================================================================="
      - "Password Policy Configuration (/etc/login.defs):"
      - "============================================================================="
      - "PASS_MAX_DAYS:            {{ password_max_age }} days"
      - "PASS_MIN_DAYS:            1 day"
      - "PASS_WARN_AGE:            {{ password_warn_age }} days"
      - "UMASK:                    {{ umask_system_users }}"
      - "============================================================================="
  when:
    - debug_mode | default(false)
    - debug_lang | default('both') in ['english', 'both']
  tags:
    - debug
    - security

# EN: Ensure password history file exists
# RU: Убедиться что файл истории паролей существует
- name: Ensure password history file directory exists
  ansible.builtin.file:
    path: "{{ password_history_file | dirname }}"
    state: directory
    mode: '0755'
    owner: root
    group: root
  tags:
    - security
    - pam

- name: Create password history file if not exists
  ansible.builtin.file:
    path: "{{ password_history_file }}"
    state: touch
    mode: '0600'
    owner: root
    group: root
    modification_time: preserve
    access_time: preserve
  tags:
    - security
    - pam

# EN: Configure PAM for Debian-based systems
# RU: Настройка PAM для систем на базе Debian
- name: Configure PAM password quality for Debian/Ubuntu
  when: ansible_os_family == "Debian"
  block:
    - name: Ensure libpam-pwquality is installed
      ansible.builtin.apt:
        name: libpam-pwquality
        state: present
        update_cache: true
      retries: "{{ retries | default(3) }}"
      delay: "{{ retry_delay | default(5) }}"

    - name: Backup PAM common-password before modification
      ansible.builtin.copy:
        src: /etc/pam.d/common-password
        dest: /etc/pam.d/common-password.backup.{{ ansible_date_time.epoch }}
        remote_src: true
        mode: '0644'
      when: backup_config | default(true)

    - name: Configure pam_pwquality in common-password
      ansible.builtin.lineinfile:
        path: /etc/pam.d/common-password
        regexp: '^password\s+requisite\s+pam_pwquality.so'
        line: "password requisite pam_pwquality.so retry=3 minlen={{ add_users_min_password_length }}"
        insertafter: '^# here are the per-package modules'
        state: present
        backup: "{{ backup_config | default(true) }}"
      tags:
        - pam
        - password_quality

    - name: Configure pam_unix password history in common-password
      ansible.builtin.lineinfile:
        path: /etc/pam.d/common-password
        regexp: '^password\s+\[success=1\s+default=ignore\]\s+pam_unix.so'
        line: "password [success=1 default=ignore] pam_unix.so obscure use_authtok try_first_pass yescrypt remember={{ password_remember_count }}"
        state: present
        backup: "{{ backup_config | default(true) }}"
      tags:
        - pam
        - password_history

    - name: Ensure libpam-modules is installed for faillock
      ansible.builtin.apt:
        name: libpam-modules
        state: present
      retries: "{{ retries | default(3) }}"
      delay: "{{ retry_delay | default(5) }}"

    - name: Backup PAM common-auth before modification
      ansible.builtin.copy:
        src: /etc/pam.d/common-auth
        dest: /etc/pam.d/common-auth.backup.{{ ansible_date_time.epoch }}
        remote_src: true
        mode: '0644'
      when: backup_config | default(true)

    - name: Configure pam_faillock in common-auth (auth phase)
      ansible.builtin.lineinfile:
        path: /etc/pam.d/common-auth
        line: "auth required pam_faillock.so preauth silent deny={{ pam_deny_attempts }} unlock_time={{ pam_unlock_time }}"
        insertbefore: '^auth\s+\[success=1\s+default=ignore\]\s+pam_unix.so'
        state: present
        backup: "{{ backup_config | default(true) }}"
      tags:
        - pam
        - faillock

    - name: Configure pam_faillock in common-auth (account phase)
      ansible.builtin.lineinfile:
        path: /etc/pam.d/common-auth
        line: "auth [default=die] pam_faillock.so authfail deny={{ pam_deny_attempts }} unlock_time={{ pam_unlock_time }}"
        insertafter: '^auth\s+\[success=1\s+default=ignore\]\s+pam_unix.so'
        state: present
        backup: "{{ backup_config | default(true) }}"
      tags:
        - pam
        - faillock

    - name: Backup PAM common-account before modification
      ansible.builtin.copy:
        src: /etc/pam.d/common-account
        dest: /etc/pam.d/common-account.backup.{{ ansible_date_time.epoch }}
        remote_src: true
        mode: '0644'
      when: backup_config | default(true)

    - name: Configure pam_faillock in common-account
      ansible.builtin.lineinfile:
        path: /etc/pam.d/common-account
        line: "account required pam_faillock.so"
        insertbefore: '^account\s+\[success=1\s+new_authtok_reqd=done\s+default=ignore\]\s+pam_unix.so'
        state: present
        backup: "{{ backup_config | default(true) }}"
      tags:
        - pam
        - faillock

    - name: Display PAM configuration for Debian (English)
      ansible.builtin.debug:
        msg:
          - "============================================================================="
          - "PAM Configuration (Debian/Ubuntu):"
          - "============================================================================="
          - "pwquality minlen:         {{ add_users_min_password_length }}"
          - "Password remember count:  {{ password_remember_count }}"
          - "Faillock deny attempts:   {{ pam_deny_attempts }}"
          - "Faillock unlock time:     {{ pam_unlock_time }}s"
          - "Files modified:           /etc/pam.d/common-{password,auth,account}"
          - "============================================================================="
      when:
        - debug_mode | default(false)
        - debug_lang | default('both') in ['english', 'both']
      tags:
        - debug
        - pam

  rescue:
    - name: PAM configuration failed for Debian
      ansible.builtin.debug:
        msg: "Warning: PAM configuration failed. Check logs."
      failed_when: false

  tags:
    - security
    - pam
    - debian

# EN: Configure PAM for RedHat-based systems
# RU: Настройка PAM для систем на базе RedHat
- name: Configure PAM password quality for RHEL/CentOS
  when: ansible_os_family == "RedHat"
  block:
    - name: Ensure libpwquality is installed
      ansible.builtin.dnf:
        name: libpwquality
        state: present
      retries: "{{ retries | default(3) }}"
      delay: "{{ retry_delay | default(5) }}"
      when: ansible_distribution_major_version | int >= 8

    - name: Ensure libpwquality is installed (yum)
      ansible.builtin.yum:
        name: libpwquality
        state: present
      retries: "{{ retries | default(3) }}"
      delay: "{{ retry_delay | default(5) }}"
      when: ansible_distribution_major_version | int < 8

    - name: Backup PAM system-auth before modification
      ansible.builtin.copy:
        src: /etc/pam.d/system-auth
        dest: /etc/pam.d/system-auth.backup.{{ ansible_date_time.epoch }}
        remote_src: true
        mode: '0644'
      when: backup_config | default(true)

    - name: Configure pam_pwquality in system-auth
      ansible.builtin.lineinfile:
        path: /etc/pam.d/system-auth
        regexp: '^password\s+requisite\s+pam_pwquality.so'
        line: "password requisite pam_pwquality.so try_first_pass local_users_only retry=3 authtok_type= minlen={{ add_users_min_password_length }}"
        insertafter: '^#%PAM-1.0'
        state: present
        backup: "{{ backup_config | default(true) }}"
      tags:
        - pam
        - password_quality

    - name: Configure pam_unix password history in system-auth
      ansible.builtin.lineinfile:
        path: /etc/pam.d/system-auth
        regexp: '^password\s+sufficient\s+pam_unix.so'
        line: "password sufficient pam_unix.so sha512 shadow try_first_pass use_authtok remember={{ password_remember_count }}"
        state: present
        backup: "{{ backup_config | default(true) }}"
      tags:
        - pam
        - password_history

    - name: Configure pam_faillock preauth in system-auth
      ansible.builtin.lineinfile:
        path: /etc/pam.d/system-auth
        line: "auth required pam_faillock.so preauth silent deny={{ pam_deny_attempts }} unlock_time={{ pam_unlock_time }}"
        insertbefore: '^auth\s+sufficient\s+pam_unix.so'
        state: present
        backup: "{{ backup_config | default(true) }}"
      tags:
        - pam
        - faillock

    - name: Configure pam_faillock authfail in system-auth
      ansible.builtin.lineinfile:
        path: /etc/pam.d/system-auth
        line: "auth [default=die] pam_faillock.so authfail deny={{ pam_deny_attempts }} unlock_time={{ pam_unlock_time }}"
        insertafter: '^auth\s+sufficient\s+pam_unix.so'
        state: present
        backup: "{{ backup_config | default(true) }}"
      tags:
        - pam
        - faillock

    - name: Configure pam_faillock in system-auth account
      ansible.builtin.lineinfile:
        path: /etc/pam.d/system-auth
        line: "account required pam_faillock.so"
        insertbefore: '^account\s+required\s+pam_unix.so'
        state: present
        backup: "{{ backup_config | default(true) }}"
      tags:
        - pam
        - faillock

    - name: Backup PAM password-auth before modification
      ansible.builtin.copy:
        src: /etc/pam.d/password-auth
        dest: /etc/pam.d/password-auth.backup.{{ ansible_date_time.epoch }}
        remote_src: true
        mode: '0644'
      when: backup_config | default(true)

    - name: Configure pam_pwquality in password-auth
      ansible.builtin.lineinfile:
        path: /etc/pam.d/password-auth
        regexp: '^password\s+requisite\s+pam_pwquality.so'
        line: "password requisite pam_pwquality.so try_first_pass local_users_only retry=3 authtok_type= minlen={{ add_users_min_password_length }}"
        insertafter: '^#%PAM-1.0'
        state: present
        backup: "{{ backup_config | default(true) }}"
      tags:
        - pam
        - password_quality

    - name: Configure pam_unix password history in password-auth
      ansible.builtin.lineinfile:
        path: /etc/pam.d/password-auth
        regexp: '^password\s+sufficient\s+pam_unix.so'
        line: "password sufficient pam_unix.so sha512 shadow try_first_pass use_authtok remember={{ password_remember_count }}"
        state: present
        backup: "{{ backup_config | default(true) }}"
      tags:
        - pam
        - password_history

    - name: Configure pam_faillock preauth in password-auth
      ansible.builtin.lineinfile:
        path: /etc/pam.d/password-auth
        line: "auth required pam_faillock.so preauth silent deny={{ pam_deny_attempts }} unlock_time={{ pam_unlock_time }}"
        insertbefore: '^auth\s+sufficient\s+pam_unix.so'
        state: present
        backup: "{{ backup_config | default(true) }}"
      tags:
        - pam
        - faillock

    - name: Configure pam_faillock authfail in password-auth
      ansible.builtin.lineinfile:
        path: /etc/pam.d/password-auth
        line: "auth [default=die] pam_faillock.so authfail deny={{ pam_deny_attempts }} unlock_time={{ pam_unlock_time }}"
        insertafter: '^auth\s+sufficient\s+pam_unix.so'
        state: present
        backup: "{{ backup_config | default(true) }}"
      tags:
        - pam
        - faillock

    - name: Configure pam_faillock in password-auth account
      ansible.builtin.lineinfile:
        path: /etc/pam.d/password-auth
        line: "account required pam_faillock.so"
        insertbefore: '^account\s+required\s+pam_unix.so'
        state: present
        backup: "{{ backup_config | default(true) }}"
      tags:
        - pam
        - faillock

    - name: Display PAM configuration for RHEL (English)
      ansible.builtin.debug:
        msg:
          - "============================================================================="
          - "PAM Configuration (RHEL/CentOS):"
          - "============================================================================="
          - "pwquality minlen:         {{ add_users_min_password_length }}"
          - "Password remember count:  {{ password_remember_count }}"
          - "Faillock deny attempts:   {{ pam_deny_attempts }}"
          - "Faillock unlock time:     {{ pam_unlock_time }}s"
          - "Files modified:           /etc/pam.d/{system-auth,password-auth}"
          - "============================================================================="
      when:
        - debug_mode | default(false)
        - debug_lang | default('both') in ['english', 'both']
      tags:
        - debug
        - pam

  rescue:
    - name: PAM configuration failed for RHEL
      ansible.builtin.debug:
        msg: "Warning: PAM configuration failed. Check logs."
      failed_when: false

  tags:
    - security
    - pam
    - rhel

# EN: Configure account inactivity lockout (excluding sudoers)
# RU: Настройка блокировки неактивных аккаунтов (исключая sudoers)
- name: Set account inactivity period for non-sudo users
  ansible.builtin.command:
    cmd: "chage -I {{ account_inactive_days }} {{ item.username }}"
  loop: "{{ users_to_add }}"
  when:
    - not (item.is_sudoers | default(false))
    - account_inactive_days | int > 0
  register: chage_inactive_result
  changed_when: chage_inactive_result.rc == 0
  failed_when: false
  tags:
    - security
    - account_expiry

- name: Display account inactivity configuration (English)
  ansible.builtin.debug:
    msg:
      - "============================================================================="
      - "Account Inactivity Configuration:"
      - "============================================================================="
      - "User:                     {{ item.item.username }}"
      - "Is Sudoer:                {{ 'Yes (SKIPPED)' if item.item.is_sudoers | default(false) else 'No' }}"
      - "Inactive Days:            {{ account_inactive_days if not (item.item.is_sudoers | default(false)) else 'Not applied' }}"
      - "Status:                   {{ 'SUCCESS' if item.rc == 0 else 'SKIPPED' }}"
      - "============================================================================="
  loop: "{{ chage_inactive_result.results | default([]) }}"
  when:
    - debug_mode | default(false)
    - debug_lang | default('both') in ['english', 'both']
    - chage_inactive_result is defined
  tags:
    - debug
    - security

# EN: Summary of security configurations
# RU: Сводка конфигураций безопасности
- name: Display comprehensive security configuration summary (English)
  ansible.builtin.debug:
    msg:
      - "============================================================================="
      - "SECURITY CONFIGURATION COMPLETED!"
      - "============================================================================="
      - "Home Directory Permissions:  {{ home_dir_permissions }}"
      - "Password Max Age:            {{ password_max_age }} days"
      - "Password Warn Age:           {{ password_warn_age }} days"
      - "Account Inactive Days:       {{ account_inactive_days }} days (non-sudo users)"
      - "PAM Deny Attempts:           {{ pam_deny_attempts }}"
      - "PAM Unlock Time:             {{ pam_unlock_time }}s"
      - "Password Remember Count:     {{ password_remember_count }}"
      - "UMASK:                       {{ umask_system_users }}"
      - "============================================================================="
      - "Configuration files modified:"
      - "- /etc/login.defs"
      - "- /etc/pam.d/* (system-specific)"
      - "- User home directories permissions"
      - "- Password history file: {{ password_history_file }}"
      - "============================================================================="
  when:
    - debug_mode | default(false)
    - debug_lang | default('both') in ['english', 'both']
  tags:
    - debug
    - security
    - summary

- name: Display comprehensive security configuration summary (Russian)
  ansible.builtin.debug:
    msg:
      - "============================================================================="
      - "КОНФИГУРАЦИЯ БЕЗОПАСНОСТИ ЗАВЕРШЕНА!"
      - "============================================================================="
      - "Права домашних директорий:   {{ home_dir_permissions }}"
      - "Макс. возраст пароля:        {{ password_max_age }} дней"
      - "Предупреждение о пароле:     {{ password_warn_age }} дней"
      - "Дней неактивности аккаунта:  {{ account_inactive_days }} дней (не-sudo пользователи)"
      - "PAM попыток до блокировки:   {{ pam_deny_attempts }}"
      - "PAM время разблокировки:     {{ pam_unlock_time }}с"
      - "Помнить паролей:             {{ password_remember_count }}"
      - "UMASK:                       {{ umask_system_users }}"
      - "============================================================================="
      - "Измененные конфигурационные файлы:"
      - "- /etc/login.defs"
      - "- /etc/pam.d/* (зависит от системы)"
      - "- Права домашних директорий пользователей"
      - "- Файл истории паролей: {{ password_history_file }}"
      - "============================================================================="
  when:
    - debug_mode | default(false)
    - debug_lang | default('both') in ['russian', 'both']
  tags:
    - debug
    - security
    - summary

